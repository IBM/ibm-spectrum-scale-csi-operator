---
- name: Ensure common tasks are run
  include_tasks: common/dev-env.yaml

- name: Set deploy directory facts
  set_fact:
    OLM_DIR: "deploy/olm-catalog/{{OPERATOR_NAME}}/{{OPERATOR_VERSION}}/"
    OLM_MANIFEST: "deploy/olm-catalog/{{OPERATOR_NAME}}/"
    OLM_CSV: "{{OPERATOR_NAME}}.v{{OPERATOR_VERSION}}.clusterserviceversion.yaml"
    CSI_CRD: "deploy/crds/"

- name: Build operator 'ClusterServiceVersion'
  shell: "GO111MODULE=on operator-sdk olm-catalog gen-csv --operator-name {{OPERATOR_NAME}} --csv-version {{OPERATOR_VERSION}} --update-crds"
  args:
    chdir: "{{OPERATOR_DIR}}"

- name: "Copy details from CRD into CSV"
  shell: "python hacks/copy_crd_descriptions.py --crd {{src}} --csv  {{dest}}"
  args:
    chdir: "{{OPERATOR_DIR}}"
  vars:
    dest: "{{OLM_DIR}}/{{OLM_CSV}}"
    src:  "{{CSI_CRD}}/{{item}}"
  loop: "{{CRD_LIST}}"

- name: Package the operator
  shell: "python hacks/package_operator.py -o {{OP_PKG}}"
  args:
    chdir: "{{OPERATOR_DIR}}"

- name: Run the 'operator-courier'
  shell: "operator-courier verify --ui_validate_io {{OP_PKG}}"
  register: ocOut
  args:
    chdir: "{{OPERATOR_DIR}}" 
- debug: var=ocOut.stdout_lines
- debug: var=ocOut.stderr_lines

- name: Create namespace
  shell: "kubectl create -f deploy/namespace.yaml"
  args:
    chdir: "{{OPERATOR_DIR}}"
  ignore_errors: yes


- name: Run 'operator-sdk' scorecard
  shell: "GO111MODULE=on operator-sdk scorecard {{SC_VARS}}"
  register: scOut
  args:
    chdir: "{{OPERATOR_DIR}}"

- debug: var=scOut.stdout_lines
- debug: var=scOut.stderr_lines

- name: Run 'molecule'
  shell: "molecule test"
  register: mOut
  args:
    chdir: "{{OPERATOR_DIR}}"
- debug: var=mOut.stdout_lines
- debug: var=mOut.stderr_lines
  


