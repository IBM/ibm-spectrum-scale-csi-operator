---
- name: Assert Custom Resource has been created
  k8s_facts:
    api_version: '{{ custom_resource.apiVersion }}'
    kind: '{{ custom_resource.kind }}'
    namespace: '{{ namespace }}'
    name: '{{ custom_resource.metadata.name }}'
  register: cr

# Should this be computed?
- name: Set attacher variables
  set_fact:
    attacherNodeSelector: 
      key:  node1
      value: infra1
    provisionerNodeSelector:
      key:  node2
      value: infra1
    pluginNodeSelector:
      key:  node3
      value: infra1
    #nodeMapping:  


- name: Update Custom Resource to have attacher fields
  k8s:
    state:  present 
    definition:
      api_version: '{{ custom_resource.apiVersion }}'
      kind: '{{ custom_resource.kind }}'
      namespace: '{{ namespace }}'
      name: '{{ custom_resource.metadata.name }}'
      spec:
        attacherNodeSelector: 
          - attacherNodeSelector
        provisionerNodeSelector:
          - provisionerNodeSelector
        pluginNodeSelector: 
          - pluginNodeSelector   

- name : Lookup Pods
  ignore_errors: yes
  failed_when: false
  debug:
    var: deploy
  vars:
    deploy: '{{ lookup("k8s",
      kind="pods",
      namespace=namespace
    )}}'
- block:
    # We know that the provisioner will have this name
    - name: Wait 60s for provisioner reconciliation to run 
      k8s_facts:
        kind:       Pod
        apiVersion: v1
        namespace:  '{{ namespace }}'
        name: "{{custom_resource.metadata.name}}-provisioner-0" # In the default config this is the provisioner name.
      register: provisioner
      until: 
        -  "provisionerNodeSelector['key'] in ( provisioner | json_query('spec.containers[].nodeSelector')"
      delay: 6
      retries: 10

    - name: Wait 60s for attacher reconciliation to run 
      k8s_facts:
        kind:       Pod
        apiVersion: v1
        namespace:  '{{ namespace }}'
        name: "{{custom_resource.metadata.name}}-attacher-0" # In the default config this is the attacher name.
      until:
        -  "attacherNodeSelector['key'] in ( provisioner | json_query('spec.containers[].nodeSelector')"
      delay: 6
      retries: 10

#  - name: Wait 60s for plugin reconciliation to run
  # We need to scan the pods for the various keys, how can we do this?
  # Right now there's no great way to figure this out?
  
  #  fail:
  #    msg: "Selectors failed to be processed."

