# spectrum_scale.yaml
apiVersion: scale.ibm.com/v1alpha1
kind: 'CSIScaleOperator'
metadata:
    name: 'ibm-spectrum-scale-csi'
    namespace: 'ibm-spectrum-scale-csi-driver'
status: {}
spec:
# OPTIONAL:
# --------
# IMAGES:

# Attacher image name, in case we do not want to use default image.
#  attacher: "< Attacher Image Name >"

# Provisioner image name, in case we do not want to use default image.
#  provisioner: "< Provisioner Image Name >"

# Driver Registrar image name, in case we do not want to use default image.
#  driverRegistrar: "< Driver Registrar Image Name >"

# SpectrumScale CSI Plugin image name, in case we do not want to use default
# image.
#  spectrumScale: "< SpectrumScale CSI Plugin Image Name >"

# NODESELECTORS:

# attacherNodeSelector specifies on which nodes we want to run attacher sidecar
# In below example attacher will run on nodes which have label as "scale=true"
# and "infranode=2". Can have multiple entries.
#  attacherNodeSelector:
#    - key: "scale"
#      value: "true"
#    - key: "infranode"
#      value: "2"

# provisionerNodeSelector specifies on which nodes we want to run provisioner
# sidecar. In below example provisioner will run on nodes which have label as
# "scale=true" and "infranode=1". Can have multiple entries.
#  provisionerNodeSelector:
#    - key: "scale"
#      value: "true"
#    - key: "infranode"
#      value: "1"

# pluginNodeSelector specifies nodes on which we want to run plugin daemoset
# In below example plugin daemonset will run on nodes which have label as
# "scale=true". Can have multiple entries.
#  pluginNodeSelector:
#    - key: "scale"
#      value: "true"

# NODEMAPPING:

# In case K8s nodes name differs from SpectrumScale nodes name, we can provide
# node mapping using nodeMapping attribute. Can have multiple entries.
#  nodeMapping:
#    - k8sNode: "< K8s Node Name >"
#      spectrumscaleNode: "< SpectrumScale Node Name >"

# REQUIRED
# --------
# The path to the gpfs file system mounted on the host machine. 
  scaleHostpath: "< GPFS FileSystem Path >"
# Below is a details for a SpectrumScale cluster config used by plugin. It can
# have multiple values. For more details refer to cluster configuration for
# plugin.
  clusters:
# The cluster id of the gpfs cluster specified (mandatory).
    - id: "< Primary Cluster ID >"

# A string specifying a secret resource name.
      secrets: "< Primary Cluster Secret >"

# Require a secure SSL connection to connect to GPFS.
      secureSslMode: false

# A string specifying a cacert resource name.
#      cacert: "< CA cert for GUI >"

# The primary file system for the GPFS cluster
      primary:
# The name of the primary filesystem.
        primaryFs: "< Primary Filesystem >"
# The name of the primary fileset, created in primaryFS.
        primaryFset: "< Fileset in Primary Filesystem >"
#        inodeLimit: "< node limit for Primary Fileset >"  # Optional
#        remoteCluster: "< Remote ClusterID >" # Optional, This ID should have seperate entry in Clusters map.
#        remoteFs: "< Remote Filesystem >" #Optional

# A collection of GUI server details.
      restApi: 
      - guiHost: "< Primary cluster GUI IP/Hostname >" 

# In case we have multiple cluster, it can be specified as below. 
#    - id: "< Cluster ID >"
#      secrets: "< Secret for Cluster >"
#      secureSslMode: false
#      restApi: 
#      - guiHost: "< Cluster GUI IP/Hostname >"
